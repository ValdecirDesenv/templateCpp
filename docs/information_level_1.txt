
Explanation:

include/: This folder contains all the header files (.h) for your project. 
	It's organized in a way that mirrors your project's namespace hierarchy.
src/: This directory contains all the source code files (.cpp) for your project.

lib/: This folder is for third-party libraries that your project depends on. 
	You can either include the library files directly or use package managers to handle dependencies.

bin/: This is where the compiled executable files will be placed after building the project.

test/: This directory holds all your unit tests. Each test file typically corresponds to a source file 
	in the src/ directory.

docs/: Documentation related to your project, such as API documentation, 
	usage guides, or design documents.

CMakeLists.txt: This is the configuration file for CMake, a popular build system for C++ projects. 
	If you're using a different build system like Makefile, you'd have a different configuration file here.
	
README.md: A Markdown file containing information about your project, including how to build, install, and use it.2


CMakeLists Explanation
  Main Folder:
    1) set the principal link compilation
  
  src Folder:
    2) set     


Compilation:
${CMAKE_CURRENT_SOURCE_DIR}

 1st  cmake -S. -B build
	-S . -> where the SOURCE directory is: in this case -S (.) indicate the current dir, if -S ../../ means two dir back
	-B . -> where the BUILD directory is: in this case -B dir , if -S xx/yy/ means two dir upfront


 2nd  cmake --build build -j 12
 3rd  GTEST_COLOR=1 ctest --test-dir build --output-on-failure -j12